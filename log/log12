https://bypass.churchless.tech/
ask for answer(press Enter twice to finish): 

生成一道编程题，涉及以下内容：
[算法]
最短路、字符串匹配
[代码量]
完成题目所需要编写的代码量在 60 行左右
[难度]
困难，题干在理解的逻辑难度上，一定要保证题目描述不能被一眼看出解法及考点，解法需要 15 分钟以上的思考
[语言]
Python，C++
[场景]
金融交易
[核心]
- 不要抄袭 LeetCode 等主流算法刷题平台的内容，生成的题目是原创的，具有挑战的
- 具体详尽的业务场景和需求约束条件


**题目：金融网络的最优路径搜索**

在现代金融交易市场中，交易者利用网络进行交易，以获取最大的利润。我们可以将这个交易网络视为一个图，每个节点代表一种特定的货币，每条边代表一个交易市场，在该市场中，可以使用一种货币购买另一种货币。

每个交易市场（边）都有一个交易费用，它用一个字符串来表示，例如 "AB2" 表示使用货币 A 买入货币 B 的交易费用为 2。交易费用是双向的，也就是说，如果 "AB2" 是一个交易费用，那么 "BA2" 也是一个交易费用。

现在，你已经得知了所有的交易市场和它们的交易费用，你的任务是编写一个程序，找出从一个给定的货币到另一个给定的货币的最低交易费用。这就需要你使用最短路算法来实现。

另外，你还需要处理一个问题，即在金融网络中可能存在货币的名字是另一种货币名字的子串，例如货币 "AB" 和货币 "ABC"。因此，你还需要使用字符串匹配算法，来正确地识别货币名字。

**输入：**

第一行是一个整数 N，表示有 N 种货币。

接下来的 N-1 行，每行是一个字符串，格式为 "XYn"，表示货币 X 和货币 Y 的交易费用为 n。

接下来的一行是一个整数 M，表示有 M 条查询。

接下来的 M 行，每行是一个字符串，格式为 "XY"，表示一条查询，要求找出从货币 X 到货币 Y 的最低交易费用。

**输出：**

对于每条查询，输出一个整数，表示从货币 X 到货币 Y 的最低交易费用。如果没有可能的交易路径，输出 -1。

**限制：**

1 <= N <= 5000

1 <= M <= 1000

货币名字的长度 <= 100

交易费用 <= 100

**示例：**

输入：
```
3
USDJPY2
JPYEUR3
2
USDEUR
EURUSD
```
输出：
```
5
5
```

**提示：**

你需要使用最短路径算法，比如 Dijkstra 算法或 Floyd-Warshall 算法，来找出最低交易费用。同时，你需要使用字符串匹配算法，比如 KMP 算法或 Boyer-Moore 算法，来正确识别货币名字。
ask for answer(press Enter twice to finish): 
