https://bypass.churchless.tech/
ask for answer(press Enter twice to finish): 

生成一道编程题，涉及以下内容：
[算法]
DFS、最大流
[代码量]
完成题目所需要编写的代码量在 60 行左右
[难度]
困难，题干在理解的逻辑难度上，一定要保证题目描述不能被一眼看出解法及考点，解法需要 15 分钟以上的思考
[语言]
Python，C++
[场景]
社交平台
[核心]
- 不要抄袭 LeetCode 等主流算法刷题平台的内容，生成的题目是原创的，具有挑战的
- 具体详尽的业务场景和需求约束条件
- 有相对复杂的边界情况需要处理
- 题目可以体现出设计能力，最好是可以分部进行考察


题目名称：社交平台广告推送系统优化

题目描述：

你被雇佣为一个社交平台的后端工程师，公司希望你来解决一个关于广告投放的问题。该社交平台上有数千万的用户，每个用户都有其独特的个人兴趣。广告商希望他们的广告能够被推送给可能对他们的产品感兴趣的用户。

你的任务是创建一个广告推送系统，使得：

- 每个用户都只会收到一条广告。
- 每个广告都只会推送给一位用户。
- 每对（用户，广告）都有一个预测的“匹配度”，代表用户可能对这个广告的兴趣程度。
- 需要最大化“总匹配度”，即所有被推送的广告的匹配度之和。

考虑到用户的数量可能非常大，你需要找到一个有效的算法来解决这个问题。

题目设定：

给定两个列表：`users` 和 `ads`，其中：

- `users` 为 N 个用户，`ads` 为 M 个广告，N 和 M 的范围为 [1, 10000]。
- 每个用户和每个广告都有一个唯一的标识符，分别为 `users[i]` 和 `ads[j]`。
- 另给定一个 N x M 的二维列表 `scores`，其中 `scores[i][j]` 代表用户 `users[i]` 和广告 `ads[j]` 的匹配度。匹配度为一个整数，范围为 [0, 100]。


输入：
- users = [1,2,3]
- ads = [1,2,3]
- scores = [[10,20,30],[20,30,10],[30,10,20]]

输出：
- [(1,3), (2,1), (3,2)] # 这是其中一种可能的最大匹配度的分配方式，总匹配度为 80

约束：

- 不能更改 `users`、`ads` 或 `scores` 列表的内容。
- 如果有多个解，返回任意一个即可。

